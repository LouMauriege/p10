name: Github Actions 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:

  frontend-test:
    name: Frontend - Test coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout repositor
        uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm  # Cache npm modules
          key: ${{ runner.os }}-node-${{ hashFiles('front/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Run frontend tests
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ./front/coverage/
          retention-days: 30
  
  frontend-sonar:
    name: 'Frontend - Sonar analyze'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front 
    needs: 
      - frontend-test
    steps:
      - name: Checkout repositor
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
        with:
          projectBaseDir: front

  frontend-docker:
    name: 'Frontend - Docker build'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front 
    needs:
      - frontend-sonar
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:front"
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/bobapp-frontend:latest

  backend-test:
    name: Backend - Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Java (JDK)
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Install Maven dependencies
        run: mvn clean install
      - name: Run backend tests
        run: mvn clean test
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco
          retention-days: 30

  backend-sonar:
    name: 'Backend - Sonar analyze'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    needs: 
      - backend-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Java (JDK) 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=loumauriege_bob-app-backend

  backend-docker:
    name: 'Backend - Docker build'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back 
    needs:
      - backend-sonar
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:back"
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/bobapp-backend:latest